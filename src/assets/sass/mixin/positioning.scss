@function _unpack($shorthand) {
  @if length($shorthand) == 1 {
    @return nth($shorthand, 1) nth($shorthand, 1) nth($shorthand, 1) nth($shorthand, 1);
  }
  @else if length($shorthand) == 2 {
    @return nth($shorthand, 1) nth($shorthand, 2) nth($shorthand, 1) nth($shorthand, 2);
  }
  @else if length($shorthand) == 3 {
    @return nth($shorthand, 1) nth($shorthand, 2) nth($shorthand, 3) nth($shorthand, 2);
  }
  @else {
    @return $shorthand;
  }
}

@function _is-length($value) {
  /* stylelint-disable-next-line */
  @return type-of($value) != 'null' and (str-slice($value + '', 1, 4) == 'calc'
  or index(auto inherit initial 0, $value)
  or (type-of($value) == 'number' and not(unitless($value))));
}

@mixin position($position: relative, $coordinates: null) {
  @if type-of($position) == list {
    $coordinates: $position;
    $position: relative;
  }

  $coordinates: _unpack($coordinates);

  $offsets: (
    top: nth($coordinates, 1),
    right: nth($coordinates, 2),
    bottom: nth($coordinates, 3),
    left: nth($coordinates, 4)
  );

  position: $position;

  @each $offset, $value in $offsets {
    @if _is-length($value) {
      #{$offset}: $value;
    }
  }
}

@mixin absolute($coordinates) {
  @include position(absolute, $coordinates);
}

@mixin fixed($coordinates) {
  @include position(fixed, $coordinates);
}

@mixin relative($coordinates) {
  @include position(relative, $coordinates);
}
